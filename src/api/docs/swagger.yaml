basePath: /api
definitions:
  request.LoginDTO:
    properties:
      email:
        example: robson@gmail.com
        type: string
      password:
        example: Test1234!
        type: string
    type: object
  request.RefreshDTO:
    properties:
      refresh_token:
        type: string
    type: object
  request.TaskDTO:
    properties:
      description:
        example: Task Description
        type: string
      status:
        example: pending
        type: string
      title:
        example: Task Title
        type: string
    type: object
  response.Account:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        $ref: '#/definitions/response.Role'
    type: object
  response.Authorization:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.DefaultPostResponse:
    properties:
      id:
        type: string
    type: object
  response.ErrorMessage:
    properties:
      duplicated_fields:
        items:
          type: string
        type: array
      invalid_fields:
        items:
          $ref: '#/definitions/response.InvalidField'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.InvalidField:
    properties:
      description:
        type: string
      field_name:
        type: string
    type: object
  response.Role:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  response.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: rag2@aluno.ifal.edu.br
    name: Robson Gominho
  description: API de gerenciamento de tarefas para disciplina de DEVOPS
  title: Task Manager API
  version: "1.0"
paths:
  /account/profile:
    get:
      description: Rota que retorna todas as informações do usuário logado.
      operationId: FindProfile
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Account'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Pesquisar dados do perfil do usuário logado
      tags:
      - Conta do usuário
  /auth/login:
    post:
      consumes:
      - application/json
      description: |-
        Rota que permite que um usuário se autentique no sistema utilizando seu endereço de e-mail e senha.
        | E-mail              | Senha     | Função                                                            |
        |---------------------|-----------|-------------------------------------------------------------------|
        | robson@gmail.com | Test1234! | Usuário do sistema. |
      operationId: Login
      parameters:
      - description: JSON com todos os dados necessários para que o login seja realizado.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.LoginDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Authorization'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Fazer login no sistema
      tags:
      - Rotas de autenticação
  /auth/logout:
    delete:
      description: Rota que permite que um usuário faça logout no sistema.
      operationId: Logout
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Fazer logout no sistema
      tags:
      - Rotas de autenticação
  /auth/refresh:
    post:
      consumes:
      - application/json
      operationId: Refresh
      parameters:
      - description: JSON com todos os dados necessários para que o login seja realizado.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.RefreshDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Authorization'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Gerar um novo par de tokens para autenticação
      tags:
      - Rotas de autenticação
  /tasks:
    get:
      consumes:
      - application/json
      description: Rota que permite a listagem das tarefas.
      operationId: FindTasks
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Task'
            type: array
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Listar tarefas
      tags:
      - Tarefas
    post:
      consumes:
      - application/json
      description: |-
        Rota que permite a criação de uma tarefa pelo usuário.
        | Status  |
        |---------|
        | pending |
        | progress |
        | done |
      operationId: CreateTask
      parameters:
      - description: JSON com todos os dados necessários para criar uma tarefa.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.TaskDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.DefaultPostResponse'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Criar tarefa
      tags:
      - Tarefas
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Rota que permite apagar uma tarefa.
      operationId: DeleteTask
      parameters:
      - default: 03b3aecd-1b52-4357-875c-298a4bc60132
        description: ID da tarefa.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Deletar tarefa
      tags:
      - Tarefas
    get:
      consumes:
      - application/json
      description: Rota que permite a busca de uma tarefa pelo id.
      operationId: FindTaskByID
      parameters:
      - default: 03b3aecd-1b52-4357-875c-298a4bc60132
        description: ID da tarefa.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Task'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Buscar tarefa
      tags:
      - Tarefas
    put:
      consumes:
      - application/json
      description: |-
        Rota que permite a atualização de uma tarefa pelo usuário.
        | Status  |
        |---------|
        | pending |
        | progress |
        | done |
      operationId: UpdateTask
      parameters:
      - default: 03b3aecd-1b52-4357-875c-298a4bc60132
        description: ID da tarefa.
        in: path
        name: id
        required: true
        type: string
      - description: JSON com todos os dados necessários para criar uma tarefa.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.TaskDTO'
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Algum dado informado não pôde ser processado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados não está disponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Atualizar tarefa
      tags:
      - Tarefas
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

services:
  api:
    container_name: task_manager_api
    build:
      context: .
      dockerfile: tools/docker/production/Dockerfile.api
      args:
        - HTTP_PROXY:'http://proxy.mycompany.com:10080'
        - HTTPS_PROXY:'http://proxy.mycompany.com:10080'
        - http_proxy:'http://proxy.mycompany.com:10080'
        - https_proxy:'http://proxy.mycompany.com:10080'
    env_file: src/api/app/.env
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - task_manager_network

  database:
    container_name: task_manager_database
    build:
      context: .
      dockerfile: tools/docker/production/Dockerfile.postgres
    env_file:
      - src/api/app/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task_manager_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "task_manager" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis
    container_name: task_manager_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - task_manager_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  task_manager_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: